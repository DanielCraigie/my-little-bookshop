#!/usr/bin/env php
<?php

require implode(DIRECTORY_SEPARATOR, ['..', '.bootstrap.php']);

use Aws\DynamoDb\DynamoDbClient;
use AWS\Result;

/** @var DynamoDbClient $dynClient */
/** @var string $tableName */

try {
    $result = $dynClient->listTables();
    if ($result instanceof Result) {
        if (in_array($tableName, $result['TableNames'])) {
            echo "Table[{$tableName}] already exists.\n";
            return 0;
        }
    } else {
        throw new Exception('An error occurred when performing table lookup.');
    }

    $result = $dynClient->createTable([
        'AttributeDefinitions' => [
            [
                'AttributeName' => 'PK',
                'AttributeType' => 'S',
            ],
            [
                'AttributeName' => 'SK',
                'AttributeType' => 'S',
            ],
            [
                'AttributeName' => 'GSI1-PK',
                'AttributeType' => 'S',
            ],
            [
                'AttributeName' => 'GSI1-SK',
                'AttributeType' => 'S',
            ],
        ],
        'GlobalSecondaryIndexes' => [
            [
                'IndexName' => 'GSI1',
                'KeySchema' => [
                    [
                        'AttributeName' => 'GSI1-PK',
                        'KeyType' => 'HASH',
                    ],
                    [
                        'AttributeName' => 'GSI1-SK',
                        'KeyType' => 'RANGE',
                    ],
                ],
                'Projection' => [
                    'ProjectionType' => 'ALL',
                ],
                'ProvisionedThroughput' => [
                    'ReadCapacityUnits' => 1,
                    'WriteCapacityUnits' => 1,
                ],
            ],
        ],
        'KeySchema' => [
            [
                'AttributeName' => 'PK',
                'KeyType' => 'HASH',
            ],
            [
                'AttributeName' => 'SK',
                'KeyType' => 'RANGE',
            ]
        ],
        'ProvisionedThroughput' => [
            'ReadCapacityUnits' => 1,
            'WriteCapacityUnits' => 1,
        ],
        'TableName' => $tableName,
    ]);

    if ($result['TableDescription']['TableStatus'] != 'ACTIVE') {
        throw new Exception('Table: ' . $tableName . ' could not be created.');
    }

    echo "Table[{$tableName}] created.\n";
} catch (Throwable $e) {
    echo "An error occurred while creating the table: {$e->getMessage()}";
    return 1;
}
