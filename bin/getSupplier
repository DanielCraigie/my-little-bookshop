#!/usr/bin/env php
<?php
if (in_array('--help', $argv)
    || in_array('-h', $argv)
    || count($argv) == 1
):?>
getSupplier - provides details for a supplier Name/PK

Options:
    -p, --partition-key
    -n, --supplier-name

Usage:
    getSupplier --partition-key <supplier PK>
    getSupplier --supplier-name <supplier Name>
    getSupplier --help

<?php
exit;
endif;

require implode(DIRECTORY_SEPARATOR, ['..', '.bootstrap.php']);

use Danielcraigie\Bookshop\AWS\dynamodb\Table;
use Danielcraigie\Bookshop\models\Supplier;

try {
    // verify table exists
    $table = new Table();
    $table->confirmExists();

    $supplier = new Supplier();

    /*
     * Handle user arguments
     */
    for ($i = 1; $i < $argc; $i++) {
        switch ($argv[$i]) {
            case '-p':
            case '--partition-key':
                $supplier->loadFromPartitionKey($argv[++$i]);
                break;
            case '-n':
            case '--supplier-name':
                // use supplier name search text to locate first match
                $supplier->loadFromName($argv[++$i]);
                break;
        }
    }

    if ($supplier->isNewModel()) {
        throw new Exception('Supplier could not be found.');
    }

    printf("Supplier[%s]\n", $supplier->getPartitionKey());
    foreach ($supplier->getData() as $item) {
        foreach ($item as $key => $attribute) {
            if ($key != 'PK') {
                printf(" [%s]=>\"%s\"", $key, $attribute['S']);
            }
        }
        echo "\n";
    }
} catch (Throwable $e) {
    printf("An error occurred while querying the table: %s", $e->getMessage());
    return 1;
}
